// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String?  @unique
  email     String?  @unique
  password  String? //only present for local accounts
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accounts Account[]
  sessions Session[]
  files    File[]
}

model Account {
  id                String  @id @default(uuid())
  user              User    @relation(fields: [userId], references: [id])
  userId            String
  provider          String // "google", "credentials", etc.
  providerAccountId String // e.g. Google user ID
  accessToken       String?
  refreshToken      String?
  expiresAt         Int?

  @@unique([provider, providerAccountId])
}

model Session {
  id        String   @id @default(uuid())
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model File {
  id           String    @id @default(uuid())
  user         User      @relation(fields: [userId], references: [id])
  userId       String
  originalName String
  storedName   String
  fileType     String
  fileSize     Int
  uploadPath   String
  uploadTime   DateTime  @default(now())
  isPublic     Boolean   @default(false)
  description  String?
  deletedAt    DateTime?
}
